// +build !ignore_autogenerated

/*
Copyright 2020 Julio Renner.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Disaggregation) DeepCopyInto(out *Disaggregation) {
	*out = *in
	in.ProtocolStack.DeepCopyInto(&out.ProtocolStack)
	if in.Backhaul != nil {
		in, out := &in.Backhaul, &out.Backhaul
		*out = new(NetworkRequirements)
		**out = **in
	}
	if in.Midhaul != nil {
		in, out := &in.Midhaul, &out.Midhaul
		*out = new(NetworkRequirements)
		**out = **in
	}
	if in.Fronthaul != nil {
		in, out := &in.Fronthaul, &out.Fronthaul
		*out = new(NetworkRequirements)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Disaggregation.
func (in *Disaggregation) DeepCopy() *Disaggregation {
	if in == nil {
		return nil
	}
	out := new(Disaggregation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Link) DeepCopyInto(out *Link) {
	*out = *in
	out.Source = in.Source
	out.Destination = in.Destination
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Link.
func (in *Link) DeepCopy() *Link {
	if in == nil {
		return nil
	}
	out := new(Link)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRequirements) DeepCopyInto(out *NetworkRequirements) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRequirements.
func (in *NetworkRequirements) DeepCopy() *NetworkRequirements {
	if in == nil {
		return nil
	}
	out := new(NetworkRequirements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Node) DeepCopyInto(out *Node) {
	*out = *in
	if in.Interfaces != nil {
		in, out := &in.Interfaces, &out.Interfaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Node.
func (in *Node) DeepCopy() *Node {
	if in == nil {
		return nil
	}
	out := new(Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolStack) DeepCopyInto(out *ProtocolStack) {
	*out = *in
	if in.CU != nil {
		in, out := &in.CU, &out.CU
		*out = make([]DisaggregationProtocolStack, len(*in))
		copy(*out, *in)
	}
	if in.DU != nil {
		in, out := &in.DU, &out.DU
		*out = make([]DisaggregationProtocolStack, len(*in))
		copy(*out, *in)
	}
	if in.RU != nil {
		in, out := &in.RU, &out.RU
		*out = make([]DisaggregationProtocolStack, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolStack.
func (in *ProtocolStack) DeepCopy() *ProtocolStack {
	if in == nil {
		return nil
	}
	out := new(ProtocolStack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RUPosition) DeepCopyInto(out *RUPosition) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RUPosition.
func (in *RUPosition) DeepCopy() *RUPosition {
	if in == nil {
		return nil
	}
	out := new(RUPosition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Split) DeepCopyInto(out *Split) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Split.
func (in *Split) DeepCopy() *Split {
	if in == nil {
		return nil
	}
	out := new(Split)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Split) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitList) DeepCopyInto(out *SplitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Split, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitList.
func (in *SplitList) DeepCopy() *SplitList {
	if in == nil {
		return nil
	}
	out := new(SplitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SplitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitSpec) DeepCopyInto(out *SplitSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitSpec.
func (in *SplitSpec) DeepCopy() *SplitSpec {
	if in == nil {
		return nil
	}
	out := new(SplitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitStatus) DeepCopyInto(out *SplitStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitStatus.
func (in *SplitStatus) DeepCopy() *SplitStatus {
	if in == nil {
		return nil
	}
	out := new(SplitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitsPlacer) DeepCopyInto(out *SplitsPlacer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitsPlacer.
func (in *SplitsPlacer) DeepCopy() *SplitsPlacer {
	if in == nil {
		return nil
	}
	out := new(SplitsPlacer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SplitsPlacer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitsPlacerList) DeepCopyInto(out *SplitsPlacerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SplitsPlacer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitsPlacerList.
func (in *SplitsPlacerList) DeepCopy() *SplitsPlacerList {
	if in == nil {
		return nil
	}
	out := new(SplitsPlacerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SplitsPlacerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitsPlacerSpec) DeepCopyInto(out *SplitsPlacerSpec) {
	*out = *in
	if in.RUs != nil {
		in, out := &in.RUs, &out.RUs
		*out = make([]*RUPosition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RUPosition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitsPlacerSpec.
func (in *SplitsPlacerSpec) DeepCopy() *SplitsPlacerSpec {
	if in == nil {
		return nil
	}
	out := new(SplitsPlacerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplitsPlacerStatus) DeepCopyInto(out *SplitsPlacerStatus) {
	*out = *in
	if in.RemainingBandwidth != nil {
		in, out := &in.RemainingBandwidth, &out.RemainingBandwidth
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplitsPlacerStatus.
func (in *SplitsPlacerStatus) DeepCopy() *SplitsPlacerStatus {
	if in == nil {
		return nil
	}
	out := new(SplitsPlacerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topology) DeepCopyInto(out *Topology) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make(map[string]*Node, len(*in))
		for key, val := range *in {
			var outVal *Node
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Node)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make(map[string]*Link, len(*in))
		for key, val := range *in {
			var outVal *Link
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(Link)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topology.
func (in *Topology) DeepCopy() *Topology {
	if in == nil {
		return nil
	}
	out := new(Topology)
	in.DeepCopyInto(out)
	return out
}
